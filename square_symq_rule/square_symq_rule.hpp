double *lege2eva ( int degree, double z[] );
double *llegepols1 ( int degree, double x );
void r8mat_row_copy ( int m, int n, int i, double v[], double a[] );
void r8vec_copy ( int n, double a1[], double a2[] );
double r8vec_sum ( int n, double a[] );
int rule_full_size ( int degree );
void rule01 ( int n, double x[], double w[] );
void rule02 ( int n, double x[], double w[] );
void rule03 ( int n, double x[], double w[] );
void rule04 ( int n, double x[], double w[] );
void rule05 ( int n, double x[], double w[] );
void rule06 ( int n, double x[], double w[] );
void rule07 ( int n, double x[], double w[] );
void rule08 ( int n, double x[], double w[] );
void rule09 ( int n, double x[], double w[] );
void rule10 ( int n, double x[], double w[] );
void rule11 ( int n, double x[], double w[] );
void rule12 ( int n, double x[], double w[] );
void rule13 ( int n, double x[], double w[] );
void rule14 ( int n, double x[], double w[] );
void rule15 ( int n, double x[], double w[] );
void rule16 ( int n, double x[], double w[] );
void rule17 ( int n, double x[], double w[] );
void rule18 ( int n, double x[], double w[] );
void rule19 ( int n, double x[], double w[] );
void rule20 ( int n, double x[], double w[] );
void square_symq ( int degree, int n, double x[], double w[] );
void square_symq_gnuplot ( int n, double x[], string header );
void timestamp ( );

