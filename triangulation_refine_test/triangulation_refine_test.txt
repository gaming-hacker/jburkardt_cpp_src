
06 May 2020 06:42:16 PM

TRIANGULATION_REFINE
  C++ version:
  Read a "linear" or "quadratic" triangulation
  and write out a refined triangulation.

  In particular:

  Read a dataset of NODE_NUM1 points in 2 dimensions.

  Read an associated triangulation dataset of TRIANGLE_NUM1 
  triangles which use 3 or 6 nodes per triangle.

  Subdivide each triangle into 4 triangles,
  generate new nodes as midpoints of current nodes.

  Write out the new node and triangulation data.

  If the input triangulation was Delaunay, then
  the output triangulation will be Delaunay.

  Compiled on May  6 2020 at 18:37:03.

  Read the header of "box3_nodes.txt".

  Spatial dimension DIM_NUM = 2
  Number of nodes NODE_NUM1 = 20

  Read the data in "box3_nodes.txt".

  First 5 nodes:

  Row:       1             2       
  Col

    1              0             0
    2              1             0
    3              2             0
    4              3             0
    5              4             0

  Read the header of "box3_elements.txt".

  Triangle order TRIANGLE_ORDER = 3
  Number of triangles TRIANGLE_NUM1  = 24

  Read the data in "box3_elements.txt".

  First 5 triangles:

  Row:      1       2       3  
  Col

    1       6       1       2  
    2       7       6       2  
    3       7      11       6  
    4      12      11       7  
    5      16      11      12  

MESH_BASE_ZERO:
  The element indexing appears to be 1-based!
  This will be converted to 0-based.

  Number of nodes in refined mesh =      63
  Number of triangles in refined mesh =  96

  First 5 output nodes:

  Row:       1             2       
  Col

    1              0             0
    2              1             0
    3              2             0
    4              3             0
    5              4             0

  First 5 output triangles

  Row:      1       2       3  
  Col

    1       5      22      24  
    2      22       0      21  
    3      24      21       1  
    4      21      24      22  
    5       6      34      25  

  Wrote the refined node data to "box3_ref_nodes.txt".
  Wrote the refined element data to "box3_ref_elements.txt".

TRIANGULATION_REFINE:
  Normal end of execution.

06 May 2020 06:42:16 PM

06 May 2020 06:42:16 PM

TRIANGULATION_REFINE
  C++ version:
  Read a "linear" or "quadratic" triangulation
  and write out a refined triangulation.

  In particular:

  Read a dataset of NODE_NUM1 points in 2 dimensions.

  Read an associated triangulation dataset of TRIANGLE_NUM1 
  triangles which use 3 or 6 nodes per triangle.

  Subdivide each triangle into 4 triangles,
  generate new nodes as midpoints of current nodes.

  Write out the new node and triangulation data.

  If the input triangulation was Delaunay, then
  the output triangulation will be Delaunay.

  Compiled on May  6 2020 at 18:37:03.

  Read the header of "house6_nodes.txt".

  Spatial dimension DIM_NUM = 2
  Number of nodes NODE_NUM1 = 12

  Read the data in "house6_nodes.txt".

  First 5 nodes:

  Row:       1             2       
  Col

    1              0             0
    2              2             0
    3              0             2
    4              2             2
    5              1             3

  Read the header of "house6_elements.txt".

  Triangle order TRIANGLE_ORDER = 6
  Number of triangles TRIANGLE_NUM1  = 3

  Read the data in "house6_elements.txt".

  First 5 triangles:

  Row:      1       2       3       4       5       6  
  Col

    1       1       2       3       6       8       7  
    2       2       4       3       9      10       8  
    3       3       4       5      10      12      11  

MESH_BASE_ZERO:
  The element indexing appears to be 1-based!
  This will be converted to 0-based.

  Number of nodes in refined mesh =      35
  Number of triangles in refined mesh =  12

  First 5 output nodes:

  Row:       1             2       
  Col

    1              0             0
    2              2             0
    3              0             2
    4              2             2
    5              1             3

  First 5 output triangles

  Row:      1       2       3       4       5       6  
  Col

    1       0       5       6      14      28      16  
    2       5       1       7      13      17      29  
    3       6       7       2      27      18      15  
    4       7       6       5      27      28      29  
    5       1       8       7      20      31      18  

  Wrote the refined node data to "house6_ref_nodes.txt".
  Wrote the refined element data to "house6_ref_elements.txt".

TRIANGULATION_REFINE:
  Normal end of execution.

06 May 2020 06:42:16 PM

06 May 2020 06:42:16 PM

TRIANGULATION_REFINE
  C++ version:
  Read a "linear" or "quadratic" triangulation
  and write out a refined triangulation.

  In particular:

  Read a dataset of NODE_NUM1 points in 2 dimensions.

  Read an associated triangulation dataset of TRIANGLE_NUM1 
  triangles which use 3 or 6 nodes per triangle.

  Subdivide each triangle into 4 triangles,
  generate new nodes as midpoints of current nodes.

  Write out the new node and triangulation data.

  If the input triangulation was Delaunay, then
  the output triangulation will be Delaunay.

  Compiled on May  6 2020 at 18:37:03.

  Read the header of "irreg6_nodes.txt".

  Spatial dimension DIM_NUM = 2
  Number of nodes NODE_NUM1 = 37

  Read the data in "irreg6_nodes.txt".

  First 5 nodes:

  Row:       1             2       
  Col

    1              0             0
    2              0             1
    3              0             2
    4              0             3
    5              0             4

  Read the header of "irreg6_elements.txt".

  Triangle order TRIANGLE_ORDER = 6
  Number of triangles TRIANGLE_NUM1  = 10

  Read the data in "irreg6_elements.txt".

  First 5 triangles:

  Row:      1       2       3       4       5       6  
  Col

    1       1      12       3       7       8       2  
    2       1       9      12       6      11       7  
    3       3      15       5      12      13       4  
    4      18       5      15      14      13      17  
    5       9      33      11      19      20      10  

MESH_BASE_ZERO:
  The element indexing appears to be 1-based!
  This will be converted to 0-based.

  Number of nodes in refined mesh =      117
  Number of triangles in refined mesh =  40

  First 5 output nodes:

  Row:       1             2       
  Col

    1              0             0
    2              0             1
    3              0             2
    4              0             3
    5              0             4

  First 5 output triangles

  Row:      1       2       3       4       5       6  
  Col

    1       0       6       1      43      89      39  
    2       6      11       7      42      46      90  
    3       1       7       2      88      47      38  
    4       7       1       6      88      89      90  
    5       0       5       6      41      92      43  

  Wrote the refined node data to "irreg6_ref_nodes.txt".
  Wrote the refined element data to "irreg6_ref_elements.txt".

TRIANGULATION_REFINE:
  Normal end of execution.

06 May 2020 06:42:16 PM
