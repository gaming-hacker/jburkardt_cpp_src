==10577== Memcheck, a memory error detector
==10577== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10577== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==10577== Command: ./test02
==10577== 
==10577== Conditional jump or move depends on uninitialised value(s)
==10577==    at 0x4F43C0A: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==10577==    by 0x4F501A4: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==10577==    by 0x108A75: junk_data() (in /home/burkardt/public_html/cpp_src/valgrind_test/test02)
==10577==    by 0x10892E: main (in /home/burkardt/public_html/cpp_src/valgrind_test/test02)
==10577== 
==10577== Use of uninitialised value of size 8
==10577==    at 0x4F4370E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==10577==    by 0x4F43C33: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==10577==    by 0x4F501A4: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==10577==    by 0x108A75: junk_data() (in /home/burkardt/public_html/cpp_src/valgrind_test/test02)
==10577==    by 0x10892E: main (in /home/burkardt/public_html/cpp_src/valgrind_test/test02)
==10577== 
==10577== Conditional jump or move depends on uninitialised value(s)
==10577==    at 0x4F4371B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==10577==    by 0x4F43C33: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==10577==    by 0x4F501A4: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==10577==    by 0x108A75: junk_data() (in /home/burkardt/public_html/cpp_src/valgrind_test/test02)
==10577==    by 0x10892E: main (in /home/burkardt/public_html/cpp_src/valgrind_test/test02)
==10577== 
==10577== Conditional jump or move depends on uninitialised value(s)
==10577==    at 0x4F43C66: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==10577==    by 0x4F501A4: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==10577==    by 0x108A75: junk_data() (in /home/burkardt/public_html/cpp_src/valgrind_test/test02)
==10577==    by 0x10892E: main (in /home/burkardt/public_html/cpp_src/valgrind_test/test02)
==10577== 

TEST02:
  C++ version
  A sample code for analysis by VALGRIND.
  0  0
  1  2
  2  0
  3  6
  4  8
  5  0
  6  0
  7  0
  8  0
  9  0

TEST02
  Normal end of execution.
==10577== 
==10577== HEAP SUMMARY:
==10577==     in use at exit: 0 bytes in 0 blocks
==10577==   total heap usage: 3 allocs, 3 frees, 76,840 bytes allocated
==10577== 
==10577== All heap blocks were freed -- no leaks are possible
==10577== 
==10577== For counts of detected and suppressed errors, rerun with: -v
==10577== Use --track-origins=yes to see where uninitialised values come from
==10577== ERROR SUMMARY: 24 errors from 4 contexts (suppressed: 0 from 0)
